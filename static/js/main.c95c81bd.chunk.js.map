{"version":3,"sources":["hub/projectList.ts","hub/Projects/RandomPoints-PI/controls/Slider.tsx","hub/Projects/RandomPoints-PI/p5/SketchWrapper.tsx","hub/Projects/RandomPoints-PI/defs&configs/initConfigs.tsx","hub/Projects/RandomPoints-PI/App.tsx","hub/Hub.tsx","reportWebVitals.ts","index.tsx"],"names":["projects","piRandomPoints","name","route","path","Slider","props","onSliderChange","event","sliderValue","target","value","setState","callback","state","data","initialValue","className","this","style","div","divClass","width","divWidth","text","type","min","bounds","MIN","max","MAX","step","STEP","slider","sliderWidth","maxWidth","sliderMaxWidth","onChange","React","Component","SketchWrapper","ref","canvas","Sketch","p","points","setup","createCanvas","window","height","background","stroke","strokeWeight","draw","controlPanel","clear","toggleClear","frameRate","framerate","x","mouseX","y","mouseY","i","numOfPointesPerFrame","point","random","windowResized","resizeCanvas","windowWidth","windowHeight","createRef","p5","current","remove","init","sliderData","funcs","sliderFrames","sketchWindowConfig","innerWidth","innerHeight","sketchConfig","App","n","numOfPoints","frames","onFramesChange","getSketchData","sketchData","result","initData","onClick","Hub","to","RouterApp","exact","component","piRandomPointsApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c95c81bd.chunk.js","sourcesContent":["export interface IProject{\n    name: string;\n\troute: string;\n    path: string;\n}\n\nexport interface IProjectList{\n\tpiRandomPoints: IProject;\n}\n\nconst projects: IProjectList = {\n\tpiRandomPoints:{\n\t\tname: \"Approximating the value of Pi with random points\",\n\t\troute: \"/RandomPoints-Pi\",\n\t\tpath: \"./Projects/RandomPoints-PI/App\",\n\t}\n}\n\n\t// name: \"Approximating the value of Pi with random points\",\n\t// URL_path: \"/RandomPoints-Pi\",\n\t// path: \"./Projects/App\"\n\nexport default projects;","import React from 'react'\n\nimport {IsliderProps, IsliderState} from '../defs&configs/types';\n\nexport default class Slider extends React.Component<IsliderProps, IsliderState>{\n\tconstructor(props: IsliderProps){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: this.props.data.initialValue\n\t\t};\n\t}\n\n\tonSliderChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tconst sliderValue = +event.target.value;\n\t\tthis.setState({\n            value: sliderValue\n        });\n        this.props.callback(sliderValue);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className={this.props.style.div.divClass} style={{width: this.props.style.div.divWidth}}>\n\t\t\t\t{this.props.data.text + this.state.value}\n\t\t\t\t<br/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin={this.props.data.bounds.MIN}\n\t\t\t\t\tmax={this.props.data.bounds.MAX}\n\t\t\t\t\tstep={this.props.data.bounds.STEP}\n\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\tstyle={{width: this.props.style.slider.sliderWidth, maxWidth: this.props.style.slider.sliderMaxWidth}}\n\t\t\t\t\tonChange={this.onSliderChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n}","import React from 'react';\nimport p5 from 'p5';\n\nimport {IsketchProps} from '../defs&configs/types'\n\nexport default class SketchWrapper extends React.Component<IsketchProps>{\n\tref: any;\n\tcanvas: p5 | null;\n\t\n\tconstructor(props: IsketchProps){\n\t\tsuper(props);\n\t\tthis.canvas = null;\n\t\tthis.ref = React.createRef();\n\t}\n\n\tSketch = (p: p5) => {\n\t\tlet points = 0;\n\t\tp.setup = () => {\n\t\t\tp.createCanvas(this.props.window.width, this.props.window.height*0.99);\n\t\t\tp.background(40, 44, 52);\n\t\t\tp.stroke(255);\n\t\t\tp.strokeWeight(5);\n\t\t}\n\t\tfunction isOnScreen(x: number, y: number) {\n\t\t\treturn x > 0 && x < p.width && y > 0 && y < p.height;\n\t\t}\n\t\tp.draw = () => {\n\t\t\tif(this.props.controlPanel.clear){\n\t\t\t\tp.background(40, 44, 52);\n\t\t\t\tpoints=0;\n\t\t\t\tthis.props.controlPanel.toggleClear();\n\t\t\t}\n\t\t\tp.frameRate(this.props.controlPanel.framerate);\n\t\t\tif(isOnScreen(p.mouseX, p.mouseY))\n\t\t\t\tfor(let i:number = 0; i<this.props.controlPanel.numOfPointesPerFrame; i++){\n\t\t\t\t\tp.point(p.random()*p.width, p.random()*p.height);\n\t\t\t\t\tpoints++;\n\t\t\t\t}\n\t\t\tthis.props.callback(points);\n\t\t}\n\n\t\tp.windowResized = () => {\n\t\t\tp.resizeCanvas(p.windowWidth*.5, p.windowHeight*0.99);\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.canvas = new p5(this.Sketch, this.ref.current);\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.canvas?.remove();\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<div ref={this.ref}>\n\t\t\t</div>\n\t\t);\n\t}\n}","const init = {\n    sliderData : {\n        data:{\n            initialValue: 50,\n            text: \"Number of points per frame: \",\n            bounds: {\n                MIN: 1,\n                MAX: 60,\n                STEP: 1\n            }\n        },\n        style:{\n            div: {\n                divClass: \"\",\n                divWidth: '50%'\n            },\n            slider: {\n                sliderWidth: '90%',\n                sliderMaxWidth: '900px'\n            }\n        },\n        funcs:{\n        }\n    },\n\n    sliderFrames : {\n        data:{\n            initialValue: 60,\n            text: \"Frames/s: \",\n            bounds: {\n                MIN: 1,\n                MAX: 120,\n                STEP: 1\n            }\n        },\n        style:{\n            div: {\n                divClass: \"\",\n                divWidth: '50%'\n            },\n            slider: {\n                sliderWidth: '90%',\n                sliderMaxWidth: '900px'\n            }\n        },\n        funcs:{\n        }\n    },\n\n    sketchWindowConfig: {\n        width: (window.innerWidth*.5),\n        height: window.innerHeight\n    },\n\n    sketchConfig: {\n        init:{\n            initialValue: 50\n        },\n        window:{\n            width: window.innerWidth,\n            height: window.innerHeight,\n            clear: false\n        }\n    }\n}\n\nexport default init;","import React from 'react';\n// import {createStore} from 'redux';\n\nimport '../../general/App.css';\n\nimport Slider from './controls/Slider';\nimport Sketch from './p5/SketchWrapper';\n\nimport initData from './defs&configs/initConfigs';\nimport {IappState} from './defs&configs/types';\n\nexport default class App extends React.Component<{}, IappState>{\n\t\n\tconstructor(props: any){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcontrolPanel:{\n\t\t\t\tnumOfPoints: initData.sliderData.data.initialValue,\n\t\t\t\tframes: initData.sliderFrames.data.initialValue,\n\t\t\t\tclear: false\n\t\t\t},\n\t\t\tsketchData:{\n\t\t\t\tresult: 0\n\t\t\t}\n\t\t}\n\t}\n\t\n\tonSliderChange = (n: number) => {\n\t\tthis.setState({\n\t\t\tcontrolPanel:{\n\t\t\t\tnumOfPoints: n,\n\t\t\t\tframes: this.state.controlPanel.frames,\n\t\t\t\tclear: false\n\t\t\t}\n\t\t});\n\t}\n\n\tonFramesChange = (n: number) => {\n\t\tthis.setState({\n\t\t\tcontrolPanel:{\n\t\t\t\tnumOfPoints: this.state.controlPanel.numOfPoints,\n\t\t\t\tframes: n,\n\t\t\t\tclear: false\n\t\t\t}\n\t\t});\n\t}\n\t\n\tgetSketchData = (n: number) => {\n\t\tthis.setState({\n\t\t\tsketchData:{\n\t\t\t\tresult: n\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleClear = () => {\n\t\tthis.setState({\n\t\t\tcontrolPanel:{\n\t\t\t\tnumOfPoints: this.state.controlPanel.numOfPoints,\n\t\t\t\tframes: this.state.controlPanel.frames,\n\t\t\t\tclear: this.state.controlPanel.clear ? false : true\n\t\t\t}\n\t\t});\n\t}\n\n\n\trender(){\n\t\tinitData.sketchWindowConfig = {\n\t\t\twidth: (window.innerWidth*.5),\n\t\t\theight: window.innerHeight\n\t\t}\n\t\treturn(\n\t\t\t<div className='main-container'>\n\t\t\t\t<div className='App-header' style={{width:'50%'}}>\n\t\t\t\t\t<Sketch {...\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontrolPanel:{\n\t\t\t\t\t\t\t\tnumOfPointesPerFrame: this.state.controlPanel.numOfPoints,\n\t\t\t\t\t\t\t\tframerate: this.state.controlPanel.frames,\n\t\t\t\t\t\t\t\tclear: this.state.controlPanel.clear,\n\t\t\t\t\t\t\t\ttoggleClear: this.toggleClear\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\twindow: initData.sketchWindowConfig,\n\t\t\t\t\t\t\tcallback: this.getSketchData\n\t\t\t\t\t\t}\n\t\t\t\t\t} />\n\t\t\t\t\t{/* <strong>{this.state.numOfPoints}</strong>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<h1>{\"help\"}</h1> */}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className='App-header' style={{width:'50%'}}>\n\t\t\t\t\t<strong>{\"Total points: \" + this.state.sketchData.result}</strong>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<strong>CONTROL PANEL</strong>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Slider {...\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata:initData.sliderData.data,\n\t\t\t\t\t\t\tstyle:initData.sliderData.style,\n\t\t\t\t\t\t\tcallback:this.onSliderChange\n\t\t\t\t\t\t}\n\t\t\t\t\t}/>\n\t\t\t\t\t<Slider {...\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata:initData.sliderFrames.data,\n\t\t\t\t\t\t\tstyle:initData.sliderFrames.style,\n\t\t\t\t\t\t\tcallback:this.onFramesChange\n\t\t\t\t\t\t}\n\t\t\t\t\t}/>\n\t\t\t\t\t<button onClick={this.toggleClear}>Reset</button>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPosition mouse over the canvas on the left to run\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t);\n\t}\n}","import React from 'react';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport './general/App.css';\n\nimport projects from './projectList';\n\nimport piRandomPointsApp from \"./Projects/RandomPoints-PI/App\";\n\nconst HUB_PATH = '/'\n\nfunction Hub(){\n\treturn (\n\t\t<div className='App-header'>\n\t\t\t<h1>Hi!</h1>\n\t\t\t<p><strong>Placeholder project:</strong></p>\n\t\t\t<Link to={projects.piRandomPoints.route}><strong className='button button1'>Click Me! :)</strong></Link>\n\t\t</div>\n\t);\n}\n\nexport default function RouterApp(){\n\n\treturn(\n\t\t<Router>\n\t\t\t<Route path={HUB_PATH} exact component={Hub}/>\n\t\t\t<Route path={projects.piRandomPoints.route} component={piRandomPointsApp}/>\n\t\t</Router>\n\t);\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Hub from './hub/Hub';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Hub />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}